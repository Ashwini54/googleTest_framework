name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    steps:
    - name: Install gtest 
    
      run: sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade && sudo apt-get install -y build-essential && sudo rm /var/lib/dpkg/lock-frontend && sudo dpkg --configure -a && sudo apt-get install -y tzdata && sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo apt-get install -y cmake
#     - uses: actions/checkout@v2
#     - name: configure
# #       run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" ..
#     - name: make
#       run: cd build && make
#     - name: Run Test
#       run: /home/runner/work/github_actions_gtest_example/github_actions_gtest_example/build/test/github_actions_gtest_example.test

#     - name: Configure CMake
#       # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
#       # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#       run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      run: /home/runner/work/googleTest_framework/googleTest_framework-main cmake CMakeLists.txt && make
      
    - name: Test
#       working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: cd  /googleTest_framework/goolgeTest_framework-main &&./executeTests
      
#     environment: TZ=Asia/Kolkata

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Install gtest manually
#       run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp *.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a
#     - uses: actions/checkout@v1
#     - name: configure
#       run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" ..
#     - name: make
#       run: cd build && make
#     - name: Run Test
#       run: /home/runner/work/github_actions_gtest_example/github_actions_gtest_example/build/test/github_actions_gtest_example.test
